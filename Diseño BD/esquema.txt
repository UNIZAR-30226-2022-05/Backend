ESQUEMA RELACIONAL

Dominios:

Esquemas de relacion:
   Usuario = (id: UUID, clave primaria; correo: varchar(200); 
              contrasenna: (); validado: Crear nuevo dominio, NO NULO; 
              nombre: Crear nuevo dominio, NO NULO; puntos: Crear nuevo dominio, NO NULO; 
              esIA: Crear nuevo dominio, NO NULO);

   Reglas = (Id: Crear nuevo dominio, clave primaria; Modo: Crear nuevo dominio, NO NULO; 
             Penaliza_al_negro: Crear nuevo dominio, NO NULO; acumular_robo: Crear nuevo dominio, NO NULO; 
             reflejo_robo: Crear nuevo dominio, NO NULO; jugadas_combinadas: Crear nuevo dominio, NO NULO; 
             cartas_especiales: Crear nuevo dominio, NO NULO);

   Icono = (id: Crear nuevo dominio, clave primaria; Imagen: Crear nuevo dominio, NO NULO; 
            Coste: Crear nuevo dominio, NO NULO; es_emoticono: Crear nuevo dominio, NO NULO);

   Partidas_acabadas = (Id: Crear nuevo dominio, clave primaria; Fecha_Inicio_Partida: Crear nuevo dominio, NO NULO; 
                        Fecha_Fin_Partida: Crear nuevo dominio, NO NULO; Reglas_Id: Crear nuevo dominio, NO NULO);
                        clave ajena (Reglas_Id) referencia a Reglas(Id)

   Amigo_de = (Usuario_Id: Crear nuevo dominio; Usuario_Id: Crear nuevo dominio; 
               Aceptado: Crear nuevo dominio, NO NULO);
               clave primaria (Usuario_Id,Usuario_Id);
               clave ajena (Usuario_Id) referencia a Usuario(Id)
               clave ajena (Usuario_Id) referencia a Usuario(Id)

   Desbloqueado = (Icono_id: Crear nuevo dominio; Usuario_Id: Crear nuevo dominio);
                   clave primaria (Icono_id,Usuario_Id);
                   clave ajena (Icono_id) referencia a Icono(id)
                   clave ajena (Usuario_Id) referencia a Usuario(Id)

   Ha_jugado = (Usuario_Id: Crear nuevo dominio; Partidas acabadas_Id: Crear nuevo dominio; 
                Puesto: Crear nuevo dominio, NO NULO);
                clave primaria (Usuario_Id,Partidas acabadas_Id);
                clave ajena (Usuario_Id) referencia a Usuario(Id)
                clave ajena (Partidas acabadas_Id) referencia a Partidas_acabadas(Id)

   Verificar que para toda ocurrencia de 'Id' en 'Partidas_acabadas' existen al menos 2 ocurrencias en 'Ha_jugado'
   Verificar que para toda ocurrencia de 'Id' en 'Partidas_acabadas' existen como mucho 4 ocurrencias en 'Ha_jugado'

   Sala = (Id: Crear nuevo dominio, clave primaria; max_participantes: Crear nuevo dominio, NO NULO; 
           _partida: Crear nuevo dominio; Reglas_Id: Crear nuevo dominio, NO NULO);
           clave ajena (Reglas_Id) referencia a Reglas(Id)

   Miembro = (Usuario_Id: Crear nuevo dominio, clave primaria; Sala_Id: Crear nuevo dominio, NO NULO);
              clave ajena (Sala_Id) referencia a Sala(Id)
              clave ajena (Usuario_Id) referencia a Usuario(Id)

   Verificar que para toda ocurrencia de 'Id' en 'Usuario' existen como mucho 4 ocurrencias en 'Miembro'

